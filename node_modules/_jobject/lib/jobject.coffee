class Jobject

  @capitalizeFirstLetter: (string)->
    return string.charAt(0).toUpperCase() + string.slice(1);

  @invalidPropertyName: (name)->
    return Error 'Invalid property name: ' + name

  @regex:
    invalidPropertyName: /(^\d|\s|[^A-Za-z0-9$_])/g

  property: (name)->
    throw new Jobject.invalidPropertyName name if not @validPropertyName name

    privateName = @createPrivateName name
    setterName = @createSetterName name

    @addPrivateProperty privateName
    @addSetter setterName, privateName
    @addGetter name, privateName

  addPrivateProperty: (name)->
    @[name] = null

  addSetter: (setterName, privateName)->
    return if not (@[setterName] is undefined)
    @[setterName] = (arg)->
      @[privateName] = arg

  addGetter: (getterName, privateName)->
    return if not (@[getterName] is undefined)

    @[getterName] = ()->
      return @[privateName]

  createPrivateName: (name)->
    return '_' + name

  createSetterName: (name)->
    return 'set' + Jobject.capitalizeFirstLetter name

  validPropertyName: (name)->
    validPropertyName = no
    if not name.match Jobject.regex.invalidPropertyName
      validPropertyName = yes
    return validPropertyName

module.exports = Jobject