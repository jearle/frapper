// Generated by CoffeeScript 1.4.0
(function() {
  var Jobject;

  Jobject = (function() {

    function Jobject() {}

    Jobject.capitalizeFirstLetter = function(string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
    };

    Jobject.invalidPropertyName = function(name) {
      return Error('Invalid property name: ' + name);
    };

    Jobject.regex = {
      invalidPropertyName: /(^\d|\s|[^A-Za-z0-9$_])/g
    };

    Jobject.prototype.property = function(name) {
      var privateName, setterName;
      if (!this.validPropertyName(name)) {
        throw new Jobject.invalidPropertyName(name);
      }
      privateName = this.createPrivateName(name);
      setterName = this.createSetterName(name);
      this.addPrivateProperty(privateName);
      this.addSetter(setterName, privateName);
      return this.addGetter(name, privateName);
    };

    Jobject.prototype.addPrivateProperty = function(name) {
      return this[name] = null;
    };

    Jobject.prototype.addSetter = function(setterName, privateName) {
      if (!(this[setterName] === void 0)) {
        return;
      }
      return this[setterName] = function(arg) {
        return this[privateName] = arg;
      };
    };

    Jobject.prototype.addGetter = function(getterName, privateName) {
      if (!(this[getterName] === void 0)) {
        return;
      }
      return this[getterName] = function() {
        return this[privateName];
      };
    };

    Jobject.prototype.createPrivateName = function(name) {
      return '_' + name;
    };

    Jobject.prototype.createSetterName = function(name) {
      return 'set' + Jobject.capitalizeFirstLetter(name);
    };

    Jobject.prototype.validPropertyName = function(name) {
      var validPropertyName;
      validPropertyName = false;
      if (!name.match(Jobject.regex.invalidPropertyName)) {
        validPropertyName = true;
      }
      return validPropertyName;
    };

    return Jobject;

  })();

  module.exports = Jobject;

}).call(this);
